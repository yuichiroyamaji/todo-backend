---
AWSTemplateFormatVersion: '2010-09-09'
Description: Template of Base Network Components for TODO Demo App

Mappings:
  StackConfig:
    VPC:
      CIDR: 10.1.0.0/16
    PublicSubnet1:
      CIDR: 10.1.0.0/24
    PrivateSubnet1:
      CIDR: 10.1.1.0/24
    PublicSubnet2:
      CIDR: 10.1.2.0/24
    PrivateSubnet2:
      CIDR: 10.1.3.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [ StackConfig, VPC, CIDR ]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: todo-vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: todo-vpc-igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: todo-vpc-public-route-table
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: !FindInMap [ StackConfig, PublicSubnet1, CIDR ]
      Tags:
        - Key: Name
          Value: Public subnet
    # 2022/03/20 alb_fargate.yamlを使用してalb/fargateを自動化する時はsubnetの情報をexportして渡してあげる必要あり
    # https://dev.classmethod.jp/articles/cloudformation-with-custom-resource-for-fargate-blue-green-deployment/
    # Export:
    #  Name: Fn::Sub 
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: !FindInMap [ StackConfig, PublicSubnet2, CIDR ]
      Tags:
        - Key: Name
          Value: Public subnet 2
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  EipForNatGW1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGW1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EipForNatGW1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: todo-vpc-natgw-1
  EipForNatGW2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGW2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EipForNatGW2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: todo-vpc-natgw-2
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    DependsOn : NatGW1
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: todo-vpc-private-route-table-1
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGW1
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    DependsOn : NatGW2
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: todo-vpc-private-route-table-2
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGW2
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn : NatGW1
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: !FindInMap [ StackConfig , PrivateSubnet1 , CIDR ]
      Tags:
        - Key: Name
          Value: Private subnet
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn : NatGW2
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: !FindInMap [ StackConfig , PrivateSubnet2 , CIDR ]
      Tags:
        - Key: Name
          Value: Private subnet 2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2
